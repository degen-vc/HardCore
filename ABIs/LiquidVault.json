{
  "contractName": "LiquidVault",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "HCORE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "LPstakes",
      "outputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeStamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "hcore",
          "type": "address"
        }
      ],
      "name": "configure",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "purchaseLP",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"HCORE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"LPstakes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimLP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hcore\",\"type\":\"address\"}],\"name\":\"configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchaseLP\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/justin/freelancing/degen/hardcore/contracts/LiquidVault.sol\":\"LiquidVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/justin/freelancing/degen/hardcore/contracts/LiquidVault.sol\":{\"keccak256\":\"0x62c9bdb42e40503434f1514ceba4fe824f0d66f3191b7122cdb7e05685fa6ce4\",\"urls\":[\"bzz-raw://d529fa81e191dba46f7d89384d97ccd5104fbc336a4a6fb0da8f3dac0ca0c4ba\",\"dweb:/ipfs/QmfJL6cJff4Q4YDrCFevDYAg8EYm6m3zUAP34BDQi3QJ2e\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]}},\"version\":1}",
  "bytecode": "0x608060405262278d00600155600061001b6100be60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100c6565b600033905090565b6107f3806100d56000396000f3fe6080604052600436106100865760003560e01c806385b449e51161005957806385b449e5146101325780638da5cb5b146101db578063aa093d8114610232578063de44391a14610289578063f2fde38b146102a057610086565b806340f02ab61461008b578063715018a6146100b657806374d6588b146100cd57806381b8d60b146100d7575b600080fd5b34801561009757600080fd5b506100a06102f1565b6040518082815260200191505060405180910390f35b3480156100c257600080fd5b506100cb6102f7565b005b6100d561047f565b005b3480156100e357600080fd5b50610130600480360360408110156100fa57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610481565b005b34801561013e57600080fd5b5061018b6004803603604081101561015557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104cd565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b3480156101e757600080fd5b506101f0610531565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023e57600080fd5b5061024761055a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029557600080fd5b5061029e610580565b005b3480156102ac57600080fd5b506102ef600480360360208110156102c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610582565b005b60015481565b6102ff61078f565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b565b8160018190555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260205281600052604060002081815481106104e657fe5b9060005260206000209060030201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b565b61058a61078f565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461064b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806107986026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220439f13ebbe4984fae47eb6428a5b18dc28f1962bf26d2a8e37276ff1bac3c7e264736f6c63430006020033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c806385b449e51161005957806385b449e5146101325780638da5cb5b146101db578063aa093d8114610232578063de44391a14610289578063f2fde38b146102a057610086565b806340f02ab61461008b578063715018a6146100b657806374d6588b146100cd57806381b8d60b146100d7575b600080fd5b34801561009757600080fd5b506100a06102f1565b6040518082815260200191505060405180910390f35b3480156100c257600080fd5b506100cb6102f7565b005b6100d561047f565b005b3480156100e357600080fd5b50610130600480360360408110156100fa57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610481565b005b34801561013e57600080fd5b5061018b6004803603604081101561015557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104cd565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b3480156101e757600080fd5b506101f0610531565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023e57600080fd5b5061024761055a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029557600080fd5b5061029e610580565b005b3480156102ac57600080fd5b506102ef600480360360208110156102c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610582565b005b60015481565b6102ff61078f565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b565b8160018190555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260205281600052604060002081815481106104e657fe5b9060005260206000209060030201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b565b61058a61078f565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461064b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806107986026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220439f13ebbe4984fae47eb6428a5b18dc28f1962bf26d2a8e37276ff1bac3c7e264736f6c63430006020033",
  "sourceMap": "78:795:3:-:0;;;351:7;323:35;;865:17:12;885:12;:10;;;:12;;:::i;:::-;865:32;;916:9;907:6;;:18;;;;;;;;;;;;;;;;;;973:9;940:43;;969:1;940:43;;;;;;;;;;;;831:159;78:795:3;;590:104:11;643:15;677:10;670:17;;590:104;:::o;78:795:3:-;;;;;;;",
  "deployedSourceMap": "78:795:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;323:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;323:35:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1689:145:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1689:145:12;;;:::i;:::-;;744:45:3;;;:::i;:::-;;552:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;552:129:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;552:129:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;440:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;440:45:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;440:45:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:77:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1066:77:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;492:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;492:20:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;837:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;837:34:3;;;:::i;:::-;;1983:240:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1983:240:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1983:240:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;323:35:3;;;;:::o;1689:145:12:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:1:::1;1758:40;;1779:6;::::0;::::1;;;;;;;;;1758:40;;;;;;;;;;;;1825:1;1808:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1689:145::o:0;744:45:3:-;:::o;552:129::-;639:8;623:13;:24;;;;669:5;661;;:13;;;;;;;;;;;;;;;;;;552:129;;:::o;440:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1066:77:12:-;1104:7;1130:6;;;;;;;;;;;1123:13;;1066:77;:::o;492:20:3:-;;;;;;;;;;;;;:::o;837:34::-;:::o;1983:240:12:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:8;2151:38;;2172:6;::::0;::::1;;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;590:104:11:-;643:15;677:10;670:17;;590:104;:::o",
  "source": "pragma solidity ^0.6.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\"; \ncontract LiquidVault is Ownable {\n\n    /*\n        A user can hold multiple locked LP batches. Each batch takes 30 days to incubate\n    */\n    struct LPbatch {\n        address holder;\n        uint256 amount;\n        uint256 timeStamp;\n    }\n\n    uint public stakeDuration = 30 days;\n    //Front end can loop through this and inspect if enough time has passed\n    mapping(address => LPbatch[]) public LPstakes;\n\n    address public HCORE;  //use to get uni token pair\n    \n    function configure (uint duration, address hcore) public {\n            stakeDuration = duration;\n            HCORE = hcore;\n    }\n\n    //send eth to match with HCORE tokens in LiquidVault\n    function purchaseLP() public payable {\n\n    }\n\n    //pops latest LP if older than period\n    function claimLP() public {\n\n    }\n}\n",
  "sourcePath": "/home/justin/freelancing/degen/hardcore/contracts/LiquidVault.sol",
  "ast": {
    "absolutePath": "/home/justin/freelancing/degen/hardcore/contracts/LiquidVault.sol",
    "exportedSymbols": {
      "LiquidVault": [
        1028
      ]
    },
    "id": 1029,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 983,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 984,
        "nodeType": "ImportDirective",
        "scope": 1029,
        "sourceUnit": 9374,
        "src": "24:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 985,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9373,
              "src": "102:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$9373",
                "typeString": "contract Ownable"
              }
            },
            "id": 986,
            "nodeType": "InheritanceSpecifier",
            "src": "102:7:3"
          }
        ],
        "contractDependencies": [
          9270,
          9373
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1028,
        "linearizedBaseContracts": [
          1028,
          9373,
          9270
        ],
        "name": "LiquidVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "LiquidVault.LPbatch",
            "id": 993,
            "members": [
              {
                "constant": false,
                "id": 988,
                "name": "holder",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 993,
                "src": "245:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 987,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "245:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 990,
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 993,
                "src": "269:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 989,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "269:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 992,
                "name": "timeStamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 993,
                "src": "293:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 991,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "293:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "LPbatch",
            "nodeType": "StructDefinition",
            "scope": 1028,
            "src": "220:97:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "40f02ab6",
            "id": 996,
            "name": "stakeDuration",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1028,
            "src": "323:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 994,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "323:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3330",
              "id": 995,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "351:7:3",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "85b449e5",
            "id": 1001,
            "name": "LPstakes",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1028,
            "src": "440:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LPbatch_$993_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct LiquidVault.LPbatch[])"
            },
            "typeName": {
              "id": 1000,
              "keyType": {
                "id": 997,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "448:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "440:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LPbatch_$993_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct LiquidVault.LPbatch[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 998,
                  "name": "LPbatch",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 993,
                  "src": "459:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LPbatch_$993_storage_ptr",
                    "typeString": "struct LiquidVault.LPbatch"
                  }
                },
                "id": 999,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "459:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_LPbatch_$993_storage_$dyn_storage_ptr",
                  "typeString": "struct LiquidVault.LPbatch[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aa093d81",
            "id": 1003,
            "name": "HCORE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1028,
            "src": "492:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1002,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "492:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1018,
              "nodeType": "Block",
              "src": "609:72:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1010,
                      "name": "stakeDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "623:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1011,
                      "name": "duration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "639:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "623:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1013,
                  "nodeType": "ExpressionStatement",
                  "src": "623:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1014,
                      "name": "HCORE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1003,
                      "src": "661:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1015,
                      "name": "hcore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "669:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "661:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "661:13:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "81b8d60b",
            "id": 1019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configure",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "name": "duration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1019,
                  "src": "572:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1007,
                  "name": "hcore",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1019,
                  "src": "587:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "571:30:3"
            },
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "609:0:3"
            },
            "scope": 1028,
            "src": "552:129:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1022,
              "nodeType": "Block",
              "src": "781:8:3",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "74d6588b",
            "id": 1023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseLP",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "763:2:3"
            },
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "781:0:3"
            },
            "scope": 1028,
            "src": "744:45:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1026,
              "nodeType": "Block",
              "src": "863:8:3",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "de44391a",
            "id": 1027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimLP",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "853:2:3"
            },
            "returnParameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:0:3"
            },
            "scope": 1028,
            "src": "837:34:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1029,
        "src": "78:795:3"
      }
    ],
    "src": "0:874:3"
  },
  "legacyAST": {
    "absolutePath": "/home/justin/freelancing/degen/hardcore/contracts/LiquidVault.sol",
    "exportedSymbols": {
      "LiquidVault": [
        1028
      ]
    },
    "id": 1029,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 983,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 984,
        "nodeType": "ImportDirective",
        "scope": 1029,
        "sourceUnit": 9374,
        "src": "24:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 985,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9373,
              "src": "102:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$9373",
                "typeString": "contract Ownable"
              }
            },
            "id": 986,
            "nodeType": "InheritanceSpecifier",
            "src": "102:7:3"
          }
        ],
        "contractDependencies": [
          9270,
          9373
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1028,
        "linearizedBaseContracts": [
          1028,
          9373,
          9270
        ],
        "name": "LiquidVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "LiquidVault.LPbatch",
            "id": 993,
            "members": [
              {
                "constant": false,
                "id": 988,
                "name": "holder",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 993,
                "src": "245:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 987,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "245:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 990,
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 993,
                "src": "269:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 989,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "269:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 992,
                "name": "timeStamp",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 993,
                "src": "293:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 991,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "293:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "LPbatch",
            "nodeType": "StructDefinition",
            "scope": 1028,
            "src": "220:97:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "40f02ab6",
            "id": 996,
            "name": "stakeDuration",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1028,
            "src": "323:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 994,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "323:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3330",
              "id": 995,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "351:7:3",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "85b449e5",
            "id": 1001,
            "name": "LPstakes",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1028,
            "src": "440:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LPbatch_$993_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct LiquidVault.LPbatch[])"
            },
            "typeName": {
              "id": 1000,
              "keyType": {
                "id": 997,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "448:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "440:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LPbatch_$993_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct LiquidVault.LPbatch[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 998,
                  "name": "LPbatch",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 993,
                  "src": "459:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LPbatch_$993_storage_ptr",
                    "typeString": "struct LiquidVault.LPbatch"
                  }
                },
                "id": 999,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "459:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_LPbatch_$993_storage_$dyn_storage_ptr",
                  "typeString": "struct LiquidVault.LPbatch[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aa093d81",
            "id": 1003,
            "name": "HCORE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1028,
            "src": "492:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1002,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "492:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1018,
              "nodeType": "Block",
              "src": "609:72:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1010,
                      "name": "stakeDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "623:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1011,
                      "name": "duration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "639:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "623:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1013,
                  "nodeType": "ExpressionStatement",
                  "src": "623:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1014,
                      "name": "HCORE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1003,
                      "src": "661:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1015,
                      "name": "hcore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "669:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "661:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "661:13:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "81b8d60b",
            "id": 1019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configure",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "name": "duration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1019,
                  "src": "572:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1007,
                  "name": "hcore",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1019,
                  "src": "587:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "571:30:3"
            },
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "609:0:3"
            },
            "scope": 1028,
            "src": "552:129:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1022,
              "nodeType": "Block",
              "src": "781:8:3",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "74d6588b",
            "id": 1023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseLP",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "763:2:3"
            },
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "781:0:3"
            },
            "scope": 1028,
            "src": "744:45:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1026,
              "nodeType": "Block",
              "src": "863:8:3",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "de44391a",
            "id": 1027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimLP",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "853:2:3"
            },
            "returnParameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:0:3"
            },
            "scope": 1028,
            "src": "837:34:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1029,
        "src": "78:795:3"
      }
    ],
    "src": "0:874:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-10-17T14:15:19.205Z",
  "devdoc": {
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}